server:
  port: 8080
  servlet:
    context-path: /security/api/v1
  error:
    include-message: always

spring:
  cache:
    type: redis
    redis:
      time-to-live: 60000
  redis:
    host: localhost
    port: 6379

  datasource:
    url: jdbc:postgresql://localhost:5602/postgres
    username: brycode
    password: password
    driver-class-name: org.postgresql.Driver

  jpa:
    generate-ddl: true
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        jdbc:
          lob:
            non_contextual_creation: true
      dialect: org.hibernate.dialect.PostgreSQLDialect
    database: postgresql

  security:
    oauth2:
      client:
        registration:
          google:
            clientId: 676359110882-2q3o27279u54v3chiqso5r38s7iusqjf.apps.googleusercontent.com
            clientSecret: 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

  kafka:
    bootstrap-servers: localhost:9092

  camel.component.kafka.configuration:
    key.serializer: org.apache.kafka.common.serialization.StringSerializer
    value.serializer: org.apache.kafka.common.serialization.StringSerializer
    key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
    value.deserializer: org.apache.kafka.common.serialization.StringDeserializer


logging:
  level:
    org.springframework.security: DEBUG
    org.hibernate: DEBUG
    org.springframework.data.jpa: DEBUG

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html

cors:
  allowed-origins: "*"
  allowed-methods: "*"
  allowed-headers: "*"
  exposed-headers: "*"

email:
  host: localhost
  port: 1025
  username: mutee
  password: mutee
  properties:
    mail:
      smtp:
        trust: "*"
      auth: true
      starttls:
        enable: true
        required: true
      connectiontimeout: 5000
      timeout: 3000
      writetimeout: 5000

mailing:
  frontend:
    activation-url: http://localhost:4200/activate-account